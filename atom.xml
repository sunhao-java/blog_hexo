<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孙昊的博客</title>
  
  <subtitle>Crazy Coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.crazy-coder.cn/"/>
  <updated>2021-05-08T02:02:57.093Z</updated>
  <id>https://www.crazy-coder.cn/</id>
  
  <author>
    <name>孙昊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS安装FFmpeg</title>
    <link href="https://www.crazy-coder.cn/2020/09/05/gong-ju/centos-an-zhuang-ffmpeg/"/>
    <id>https://www.crazy-coder.cn/2020/09/05/gong-ju/centos-an-zhuang-ffmpeg/</id>
    <published>2020-09-05T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;export FFMPEG_PACKAGE=/home/tools/packages
export FFMPEG_INSTALL=/home/tools/ffmpeg_install

export PATH=$PATH:$HOME/bin:$FFMPEG_INSTALL/bin&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://www.crazy-coder.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Docker" scheme="https://www.crazy-coder.cn/tags/Docker/"/>
    
      <category term="FFmpeg" scheme="https://www.crazy-coder.cn/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Java语法糖介绍</title>
    <link href="https://www.crazy-coder.cn/2020/08/13/hou-duan/java-yu-fa-tang-jie-shao/"/>
    <id>https://www.crazy-coder.cn/2020/08/13/hou-duan/java-yu-fa-tang-jie-shao/</id>
    <published>2020-08-13T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是语法糖&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法糖（Syntactic sugar），也译为糖衣语法，是由英国计算机科学家彼得·兰丁发明的一个术语，指计算机语言中添加的某种语法，这种语法对语言的功能没有影响，但是更方便程序员使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;能够带来的好处&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法糖让程序更加简洁，有更高的可读性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有哪些语法糖&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动拆箱、装箱&lt;/li&gt;
&lt;li&gt;泛型擦除&lt;/li&gt;
&lt;li&gt;不定长参数&lt;/li&gt;
&lt;li&gt;迭代器&lt;/li&gt;
&lt;li&gt;枚举&lt;/li&gt;
&lt;li&gt;switch支持枚举和字符串&lt;/li&gt;
&lt;li&gt;内部类&lt;/li&gt;
&lt;li&gt;try-with-resources&lt;/li&gt;
&lt;li&gt;lambda&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.crazy-coder.cn/tags/Java/"/>
    
      <category term="语法糖" scheme="https://www.crazy-coder.cn/tags/%E8%AF%AD%E6%B3%95%E7%B3%96/"/>
    
  </entry>
  
  <entry>
    <title>git同时push到多个远端仓库</title>
    <link href="https://www.crazy-coder.cn/2020/07/23/gong-ju/git-tong-shi-push-dao-duo-ge-yuan-duan-cang-ku/"/>
    <id>https://www.crazy-coder.cn/2020/07/23/gong-ju/git-tong-shi-push-dao-duo-ge-yuan-duan-cang-ku/</id>
    <published>2020-07-23T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当你的项目同时放在两个远程仓库(例如：一个开源中国，一个github)上时，需要分别push两次，进行以下修改，即可一次push，推送到两个远程库！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://www.crazy-coder.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://www.crazy-coder.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Flume消费Kafka中的消息存储到Hbase中</title>
    <link href="https://www.crazy-coder.cn/2020/05/13/da-shu-ju/flume-xiao-fei-kafka-zhong-de-xiao-xi-cun-chu-dao-hbase-zhong/"/>
    <id>https://www.crazy-coder.cn/2020/05/13/da-shu-ju/flume-xiao-fei-kafka-zhong-de-xiao-xi-cun-chu-dao-hbase-zhong/</id>
    <published>2020-05-13T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;先安装《OpenResty记录日志输出到kafka.md》和《安装HBase.md》实际操作安装好以下中间件&lt;ul&gt;
&lt;li&gt;openResty[1.15.8.3]&lt;/li&gt;
&lt;li&gt;kafka[2.5.0]&lt;/li&gt;
&lt;li&gt;zookeeper[3.6.0]&lt;/li&gt;
&lt;li&gt;hbase[0.94.27]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特别注意Flume和Hbase的版本号可能会有兼容问题    &lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://www.crazy-coder.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Flume" scheme="https://www.crazy-coder.cn/tags/Flume/"/>
    
      <category term="kafka" scheme="https://www.crazy-coder.cn/tags/kafka/"/>
    
      <category term="hbase" scheme="https://www.crazy-coder.cn/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>Kafka常用命令</title>
    <link href="https://www.crazy-coder.cn/2020/05/13/da-shu-ju/kafka-chang-yong-ming-ling/"/>
    <id>https://www.crazy-coder.cn/2020/05/13/da-shu-ju/kafka-chang-yong-ming-ling/</id>
    <published>2020-05-13T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看kafka topic列表，使用–list参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ./kafka-topics.sh --zookeeper 192.168.137.100:2181
        
      
    
    </summary>
    
    
      <category term="大数据" scheme="https://www.crazy-coder.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="kafka" scheme="https://www.crazy-coder.cn/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>安装HBase</title>
    <link href="https://www.crazy-coder.cn/2020/05/13/da-shu-ju/an-zhuang-hbase/"/>
    <id>https://www.crazy-coder.cn/2020/05/13/da-shu-ju/an-zhuang-hbase/</id>
    <published>2020-05-13T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;地址：&lt;a href=&quot;https://mirror-hk.koddos.net/apache/hbase/${hbase_version}/hbase-${hbase_version}-bin.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirror-hk.koddos.net/apache/hbase/${hbase_version}/hbase-${hbase_version}-bin.tar.gz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;${hbase_version}替换成具体的版本&lt;/li&gt;
&lt;li&gt;tar -zxvf hbase-${hbase_version}-bin.tar.gz&lt;/li&gt;
&lt;li&gt;cd hbase-${hbase_version}-bin/bin&lt;/li&gt;
&lt;li&gt;./start-hbase.sh&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://www.crazy-coder.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="HBase" scheme="https://www.crazy-coder.cn/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>OpenResty记录日志输出到kafka</title>
    <link href="https://www.crazy-coder.cn/2020/05/11/da-shu-ju/openresty-ji-lu-ri-zhi-shu-chu-dao-kafka/"/>
    <id>https://www.crazy-coder.cn/2020/05/11/da-shu-ju/openresty-ji-lu-ri-zhi-shu-chu-dao-kafka/</id>
    <published>2020-05-11T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装zookeeper（基于docker安装）&quot;&gt;&lt;a href=&quot;#安装zookeeper（基于docker安装）&quot; class=&quot;headerlink&quot; title=&quot;安装zookeeper（基于docker安装）&quot;&gt;&lt;/a&gt;安装zookeeper（基于docker安装）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;docker-compose.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;version: &amp;#39;3.1&amp;#39;
services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    network_mode: &amp;quot;bridge&amp;quot;
    ports:
      - &amp;quot;2181:2181&amp;quot;
    volumes:
      - /home/docker_volume/zookeeper/zoo.cfg:/conf/zoo.cfg
      - /home/docker_volume/zookeeper/data/:/data/
      - /home/docker_volume/zookeeper/logs/:/datalog/&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://www.crazy-coder.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="kafka" scheme="https://www.crazy-coder.cn/tags/kafka/"/>
    
      <category term="OpenResty" scheme="https://www.crazy-coder.cn/tags/OpenResty/"/>
    
      <category term="埋点采集" scheme="https://www.crazy-coder.cn/tags/%E5%9F%8B%E7%82%B9%E9%87%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>安装OpenResty</title>
    <link href="https://www.crazy-coder.cn/2020/05/11/da-shu-ju/an-zhuang-openresty/"/>
    <id>https://www.crazy-coder.cn/2020/05/11/da-shu-ju/an-zhuang-openresty/</id>
    <published>2020-05-11T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开url：&lt;a href=&quot;https://openresty.org/cn/download.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://openresty.org/cn/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;找到最新版本或者合适的版本&lt;pre&gt;&lt;code&gt;curl https://openresty.org/download/openresty-${version}.tar.gz
tar -zxvf openresty-${version}.tar.gz
cd openresty-${version}&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://www.crazy-coder.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="OpenResty" scheme="https://www.crazy-coder.cn/tags/OpenResty/"/>
    
      <category term="埋点采集" scheme="https://www.crazy-coder.cn/tags/%E5%9F%8B%E7%82%B9%E9%87%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>跟我一起系列之读Spring注解源码</title>
    <link href="https://www.crazy-coder.cn/2020/03/25/hou-duan/gen-wo-yi-qi-xi-lie-zhi-du-spring-zhu-jie-yuan-ma/"/>
    <id>https://www.crazy-coder.cn/2020/03/25/hou-duan/gen-wo-yi-qi-xi-lie-zhi-du-spring-zhu-jie-yuan-ma/</id>
    <published>2020-03-25T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;读源码系列之Spring注解&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="spring" scheme="https://www.crazy-coder.cn/tags/spring/"/>
    
      <category term="源码" scheme="https://www.crazy-coder.cn/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>XXL-JOB几个关键线程、队列的分析</title>
    <link href="https://www.crazy-coder.cn/2020/02/28/hou-duan/xxl-job-ji-ge-guan-jian-xian-cheng-dui-lie-de-fen-xi/"/>
    <id>https://www.crazy-coder.cn/2020/02/28/hou-duan/xxl-job-ji-ge-guan-jian-xian-cheng-dui-lie-de-fen-xi/</id>
    <published>2020-02-28T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;XXL-JOB几个关键线程、队列的分析&quot;&gt;&lt;a href=&quot;#XXL-JOB几个关键线程、队列的分析&quot; class=&quot;headerlink&quot; title=&quot;XXL-JOB几个关键线程、队列的分析&quot;&gt;&lt;/a&gt;XXL-JOB几个关键线程、队列的分析&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;XXL-JOB在初始化时，会执行一系列的方法，这些方法启动了一系列的线程，还创建了一些队列，这些线程、队列对于整个任务调度来说都是至关重要的，现在就来分析一下这些线程、队列。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.crazy-coder.cn/tags/Java/"/>
    
      <category term="xxl-job" scheme="https://www.crazy-coder.cn/tags/xxl-job/"/>
    
  </entry>
  
  <entry>
    <title>XXL-JOB日志获取分析</title>
    <link href="https://www.crazy-coder.cn/2020/02/28/hou-duan/xxl-job-ri-zhi-huo-qu-fen-xi/"/>
    <id>https://www.crazy-coder.cn/2020/02/28/hou-duan/xxl-job-ri-zhi-huo-qu-fen-xi/</id>
    <published>2020-02-28T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;XXL-JOB日志获取分析&quot;&gt;&lt;a href=&quot;#XXL-JOB日志获取分析&quot; class=&quot;headerlink&quot; title=&quot;XXL-JOB日志获取分析&quot;&gt;&lt;/a&gt;XXL-JOB日志获取分析&lt;/h1&gt;&lt;h2 id=&quot;现状&quot;&gt;&lt;a href=&quot;#现状&quot; class=&quot;headerlink&quot; title=&quot;现状&quot;&gt;&lt;/a&gt;现状&lt;/h2&gt;&lt;p&gt;xxl-job在任务执行时，可以看到日志，并且是实时、一行一行的展示出来。起初我认为是执行器在执行时，在每一个关键步骤向调度中心输出日志，而调度中心展示的日志也是实时接收到执行器返回的，后来在跟代码时，发现我的认知是错误的！其实是间隔一段时间(3s)就去执行器读取执行器服务器本地的日志文件！&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.crazy-coder.cn/tags/Java/"/>
    
      <category term="xxl-job" scheme="https://www.crazy-coder.cn/tags/xxl-job/"/>
    
  </entry>
  
  <entry>
    <title>模拟任务阻塞处理策略</title>
    <link href="https://www.crazy-coder.cn/2020/02/28/hou-duan/mo-ni-ren-wu-zu-sai-chu-li-ce-lue/"/>
    <id>https://www.crazy-coder.cn/2020/02/28/hou-duan/mo-ni-ren-wu-zu-sai-chu-li-ce-lue/</id>
    <published>2020-02-28T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;模拟任务阻塞处理策略&quot;&gt;&lt;a href=&quot;#模拟任务阻塞处理策略&quot; class=&quot;headerlink&quot; title=&quot;模拟任务阻塞处理策略&quot;&gt;&lt;/a&gt;模拟任务阻塞处理策略&lt;/h1&gt;&lt;h2 id=&quot;官方描述&quot;&gt;&lt;a href=&quot;#官方描述&quot; class=&quot;headerlink&quot; title=&quot;官方描述&quot;&gt;&lt;/a&gt;官方描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;阻塞处理策略：调度过于密集执行器来不及处理时的处理策略；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;单机串行（默认）：调度请求进入单机执行器后，调度请求进入FIFO队列并以串行方式运行；&lt;/li&gt;
&lt;li&gt;丢弃后续调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，本次请求将会被丢弃并标记为失败；&lt;/li&gt;
&lt;li&gt;覆盖之前调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，将会终止运行中的调度任务并清空队列，然后运行本地调度任务；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了验证并且更加熟悉XXL-JOB这一块的功能，遂做了如下的实验：&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.crazy-coder.cn/tags/Java/"/>
    
      <category term="xxl-job" scheme="https://www.crazy-coder.cn/tags/xxl-job/"/>
    
  </entry>
  
  <entry>
    <title>XXL-JOB调研</title>
    <link href="https://www.crazy-coder.cn/2020/02/24/hou-duan/xxl-job-diao-yan/"/>
    <id>https://www.crazy-coder.cn/2020/02/24/hou-duan/xxl-job-diao-yan/</id>
    <published>2020-02-24T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;架构图&quot;&gt;&lt;a href=&quot;#架构图&quot; class=&quot;headerlink&quot; title=&quot;架构图&quot;&gt;&lt;/a&gt;架构图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/imgs/xxl-job/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.crazy-coder.cn/tags/Java/"/>
    
      <category term="xxl-job" scheme="https://www.crazy-coder.cn/tags/xxl-job/"/>
    
  </entry>
  
  <entry>
    <title>记一次MySQL启动失败原因的分析</title>
    <link href="https://www.crazy-coder.cn/2020/02/12/yun-wei/failed-to-start-mysql/"/>
    <id>https://www.crazy-coder.cn/2020/02/12/yun-wei/failed-to-start-mysql/</id>
    <published>2020-02-12T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;今天在我的Windows电脑上准备启动MySQL服务，测试一点东西，但是发现每次都启动不成功，所以就引出本次的分析&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://www.crazy-coder.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="MySQL" scheme="https://www.crazy-coder.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Helm学习</title>
    <link href="https://www.crazy-coder.cn/2019/11/22/yun-wei/helm-yong-fa/"/>
    <id>https://www.crazy-coder.cn/2019/11/22/yun-wei/helm-yong-fa/</id>
    <published>2019-11-22T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装helm&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; # 官方一键安装脚本
 curl https://raw.githubusercontent.com/helm/helm/master/scripts/get &amp;gt; get_helm.sh
 $ chmod 700 get_helm.sh
 $ ./get_helm.sh&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://www.crazy-coder.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="https://www.crazy-coder.cn/tags/Docker/"/>
    
      <category term="DevOps" scheme="https://www.crazy-coder.cn/tags/DevOps/"/>
    
      <category term="k8s" scheme="https://www.crazy-coder.cn/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>使用PowerMockito+MockServer测试外部服务</title>
    <link href="https://www.crazy-coder.cn/2019/10/10/hou-duan/shi-yong-powermockito-mockserver-ce-shi-wai-bu-fu-wu/"/>
    <id>https://www.crazy-coder.cn/2019/10/10/hou-duan/shi-yong-powermockito-mockserver-ce-shi-wai-bu-fu-wu/</id>
    <published>2019-10-10T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们在项目开发中，很有可能会与第三方服务进行通讯，比如发短信、导入账单等等，这些服务写好后，如何能保证是OK的？这就需要进行&lt;strong&gt;&lt;code&gt;单元测试&lt;/code&gt;&lt;/strong&gt;，但是每次跑&lt;strong&gt;&lt;code&gt;持续集成&lt;/code&gt;&lt;/strong&gt;时，不可能真实的去调用这些发送短信、导入账单的真实接口，所以这里就需要用到强大的mock来模拟这些接口，以实现这些接口。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;所以这里我们用到了powermock和mockserver两个强大的工具。&lt;/p&gt;
&lt;p&gt;powermockito和mockito的区别：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;mockito用代理实现mock，而powermockito是直接去修改字节码实现更强大的mock。&lt;/li&gt;
&lt;li&gt;所以说powermockito是mockito的一个更加强大的扩展。&lt;/li&gt;
&lt;li&gt;mockito不能mock静态、final、私有方法等。&lt;/li&gt;
&lt;li&gt;powermockito号称是&lt;strong&gt;无所不能的PowerMock&lt;/strong&gt;,上面mockito的缺陷都可以很好的弥补掉。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="单元测试" scheme="https://www.crazy-coder.cn/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
      <category term="mock" scheme="https://www.crazy-coder.cn/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>使用mockito进行单元测试</title>
    <link href="https://www.crazy-coder.cn/2019/10/10/hou-duan/shi-yong-mockito-jin-xing-dan-yuan-ce-shi/"/>
    <id>https://www.crazy-coder.cn/2019/10/10/hou-duan/shi-yong-mockito-jin-xing-dan-yuan-ce-shi/</id>
    <published>2019-10-10T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;写这篇文档的原因：&lt;br&gt;现在项目中的mock单元测试配置有一点问题:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单元测试很慢，测试类继承BaseTest，每次测试时都会去加载xml文件到spring容器中，而这个是没有必要，因为mock测试就是用于模拟 被测试类 所调用的其他类的方法，设定这些方法的返回值（即打桩），因此，不需要加载任何spring文件，除非你要调用真实方法操作数据库或者dubbo服务等接口。&lt;/li&gt;
&lt;li&gt;代码中既使用了注解@mock,又使用了spring的配置方式，产生了冗余配置。基于上面问题，说明使用者对mockito的使用并不是很了解，所以在这边简单介绍一下。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://www.crazy-coder.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="单元测试" scheme="https://www.crazy-coder.cn/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
      <category term="mock" scheme="https://www.crazy-coder.cn/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>git中的后悔药</title>
    <link href="https://www.crazy-coder.cn/2019/01/27/gong-ju/git-zhong-de-hou-hui-yao/"/>
    <id>https://www.crazy-coder.cn/2019/01/27/gong-ju/git-zhong-de-hou-hui-yao/</id>
    <published>2019-01-27T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当git提交上去一些错误代码或者一些敏感信息时，这时候你需要回滚，但是还是能在git的日志找到蛛丝马迹，这时候我们就需要后悔药了！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://www.crazy-coder.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://www.crazy-coder.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>使用Docker安装YApi</title>
    <link href="https://www.crazy-coder.cn/2019/01/23/gong-ju/shi-yong-docker-an-zhuang-yapi/"/>
    <id>https://www.crazy-coder.cn/2019/01/23/gong-ju/shi-yong-docker-an-zhuang-yapi/</id>
    <published>2019-01-23T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;YApi&lt;/code&gt;是&lt;code&gt;去哪儿网大前端技术中心（YMFE）&lt;/code&gt;开发并开源的一款&lt;code&gt;高效、易用、功能强大的API管理平台&lt;/code&gt;。支持&lt;code&gt;项目管理&lt;/code&gt;、&lt;code&gt;接口管理&lt;/code&gt;、&lt;code&gt;MockServer&lt;/code&gt;、&lt;code&gt;文档管理&lt;/code&gt;等等实用功能。&lt;/p&gt;
&lt;h1 id=&quot;关于YApi&quot;&gt;&lt;a href=&quot;#关于YApi&quot; class=&quot;headerlink&quot; title=&quot;关于YApi&quot;&gt;&lt;/a&gt;关于&lt;code&gt;YApi&lt;/code&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;源码：&lt;a href=&quot;https://github.com/YMFE/yapi&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/YMFE/yapi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用教程：&lt;a href=&quot;https://yapi.ymfe.org/documents/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://yapi.ymfe.org/documents/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线Demo：&lt;a href=&quot;http://yapi.demo.qunar.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://yapi.demo.qunar.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;最新版本：&lt;a href=&quot;https://github.com/YMFE/yapi/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/YMFE/yapi/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;版本记录：&lt;a href=&quot;https://yapi.ymfe.org/documents/CHANGELOG.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://yapi.ymfe.org/documents/CHANGELOG.html&lt;/a&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://www.crazy-coder.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Docker" scheme="https://www.crazy-coder.cn/tags/Docker/"/>
    
      <category term="yapi" scheme="https://www.crazy-coder.cn/tags/yapi/"/>
    
  </entry>
  
  <entry>
    <title>搭建Harbor企业级docker仓库</title>
    <link href="https://www.crazy-coder.cn/2019/01/18/yun-wei/da-jian-harbor-qi-ye-ji-docker-cang-ku/"/>
    <id>https://www.crazy-coder.cn/2019/01/18/yun-wei/da-jian-harbor-qi-ye-ji-docker-cang-ku/</id>
    <published>2019-01-18T00:00:00.000Z</published>
    <updated>2021-05-08T02:02:57.093Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;下载harbor安装文件&quot;&gt;&lt;a href=&quot;#下载harbor安装文件&quot; class=&quot;headerlink&quot; title=&quot;下载harbor安装文件&quot;&gt;&lt;/a&gt;下载harbor安装文件&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://storage.googleapis.com/harbor-releases/release-1.7.0/harbor-online-installer-v1.7.1.tgz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; title=&quot;harbor-online-installer-v1.7.1.tgz&quot;&gt;harbor-online-installer-v1.7.1.tgz&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;放置在&lt;code&gt;/opt&lt;/code&gt;目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cd /opt/harbor&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://www.crazy-coder.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="https://www.crazy-coder.cn/tags/Docker/"/>
    
      <category term="DevOps" scheme="https://www.crazy-coder.cn/tags/DevOps/"/>
    
      <category term="k8s" scheme="https://www.crazy-coder.cn/tags/k8s/"/>
    
      <category term="Harbor" scheme="https://www.crazy-coder.cn/tags/Harbor/"/>
    
  </entry>
  
</feed>
